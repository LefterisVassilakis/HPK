apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: tpcds-benchmark-data-generation-1g
spec:
  type: Scala
  image: seedjeffwan/spark:v2.4.5-examples
  sparkVersion: 2.4.5
  mainClass: com.amazonaws.eks.tpcds.DataGeneration
  mainApplicationFile: local:///opt/spark/examples/jars/eks-spark-benchmark-assembly-1.0.jar
  mode: cluster
  arguments:
    # TPC-DS data location (Must match the bucket of Minio)
    - "s3a://spark-k8s-data/TPCDS-TEST-1G"
    # Path to kit in the docker image
    - "/opt/tpcds-kit/tools"
    # Data Format
    - "parquet"
    # Scale factor (in GB)
    - "1"
    # Generate data num partitions
    - "100"
    # Create the partitioned fact tables
    - "false"
    # Shuffle to get partitions coalesced into single files.
    - "false"
    # Logging set to WARN
    - "true"
  sparkConf:
    #"spark.eventLog.enabled": "true"
    #"spark.eventLog.dir": "s3a://spark-k8s-data/spark-events"
    "spark.ui.live": "true"
    "spark.jars.ivy": "/tmp/.ivy2/"
    "spark.hadoop.hadoop.security.authentication": "simple"
    "spark.hadoop.hadoop.security.authorization": "false"
    "spark.hadoop.hadoop.security.kerberos.keytab": ""
    "spark.hadoop.hadoop.security.kerberos.principal": ""
    "spark.hadoop.log.lever": "DEBUG"
    "spark.speculation": "false"
    "spark.network.timeout": "2400"
    # S3 Credential
    "spark.hadoop.fs.s3a.endpoint": "http://artifacts.analytics-spark.svc:9000"
    "spark.hadoop.fs.s3a.access.key": "QhMEqe2qZhgdTqEbQOg4"
    "spark.hadoop.fs.s3a.secret.key": "8pEIiVZJEV9saFiR5eNakhEsEEPvY9Y598kRMkxo"
    # S3 Configs
    "spark.hadoop.fs.s3a.path.style.access": "true"
    "spark.hadoop.fs.s3a.fast.upload": "true"
    "spark.hadoop.fs.s3a.connection.timeout": "1200000"
    "spark.hadoop.fs.s3a.connection.maximum": "8192"
  driver:
    cores: 2
    coreLimit: "2048m"
    memory: "1000m"
    serviceAccount: spark-operator-spark
  executor:
    instances: 1
    cores: 1
    memory: "1000m"
    memoryOverhead: 1g
    serviceAccount: spark-operator-spark
  restartPolicy:
    type: Never
